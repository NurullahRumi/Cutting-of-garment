/*Copyright (c) 2016-2017 cmt.mu All Rights Reserved.
 This software is the confidential and proprietary information of cmt.mu You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with cmt.mu*/
package com.mu.cmt.pfs.pfsdb.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.sql.Date;
import java.util.HashMap;
import java.util.Map;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.wavemaker.runtime.data.dao.procedure.WMProcedureExecutor;

import com.mu.cmt.pfs.pfsdb.models.procedure.*;

@Service
public class PfsdbProcedureExecutorServiceImpl implements PfsdbProcedureExecutorService {

    private static final Logger LOGGER = LoggerFactory.getLogger(PfsdbProcedureExecutorServiceImpl.class);

    @Autowired
    @Qualifier("pfsdbWMProcedureExecutor")
    private WMProcedureExecutor procedureExecutor;

    @Transactional(value = "pfsdbTransactionManager")
    @Override
    public ProcCu1000pk0QryCufabReceivedResponse executeProcCU1000PK0_QryCUFabReceived(String puserId, String pprogId, String pordnum, String pdyejob, String pcutsts) {
        Map<String, Object> params = new HashMap<>(6);

        params.put("pUserId", puserId);
        params.put("pProgId", pprogId);
        params.put("pOrdnum", pordnum);
        params.put("pDyejob", pdyejob);
        params.put("pCutsts", pcutsts);

        return procedureExecutor.executeNamedProcedure("procCU1000PK0_QryCUFabReceived", params, ProcCu1000pk0QryCufabReceivedResponse.class);
    }

    @Transactional(value = "pfsdbTransactionManager")
    @Override
    public Void executeProcCU210PK0_CancelCU_Transfer(String psdyejob, String pddyejob, String pdordnum, Integer psfabseq, String pusrid, String preason) {
        Map<String, Object> params = new HashMap<>(6);

        params.put("p_sdyejob", psdyejob);
        params.put("p_ddyejob", pddyejob);
        params.put("p_dordnum", pdordnum);
        params.put("p_sfabseq", psfabseq);
        params.put("p_usrid", pusrid);
        params.put("p_reason", preason);

        return procedureExecutor.executeNamedProcedure("procCU210PK0_CancelCU_Transfer", params, Void.class);
    }

    @Transactional(value = "pfsdbTransactionManager")
    @Override
    public ProcCu1000pk0QryJobCutOrderResponse executeProcCU1000pk0_qryJobCutOrder(String pprogId, String pordnum, String pdyejob) {
        Map<String, Object> params = new HashMap<>(4);

        params.put("pProgId", pprogId);
        params.put("pOrdnum", pordnum);
        params.put("pDyejob", pdyejob);

        return procedureExecutor.executeNamedProcedure("procCU1000pk0_qryJobCutOrder", params, ProcCu1000pk0QryJobCutOrderResponse.class);
    }

    @Transactional(value = "pfsdbTransactionManager")
    @Override
    public Void executeProcCU1000PK0_UpdFabReceived(String puserId, String pprogId, String pdyejob, Integer pfabseq, Integer precseq, String pnewCutsts, Double pnewKgsWgh, String pnewRemarks) {
        Map<String, Object> params = new HashMap<>(8);

        params.put("pUserId", puserId);
        params.put("pProgId", pprogId);
        params.put("pDyejob", pdyejob);
        params.put("pFabseq", pfabseq);
        params.put("pRecseq", precseq);
        params.put("pNewCutsts", pnewCutsts);
        params.put("pNewKgsWgh", pnewKgsWgh);
        params.put("pNewRemarks", pnewRemarks);

        return procedureExecutor.executeNamedProcedure("procCU1000PK0_UpdFabReceived", params, Void.class);
    }

    @Transactional(value = "pfsdbTransactionManager")
    @Override
    public Void executeProcCU900pk0_InsNewDyejob(String pusrid, String pprgid, String pdyejob, String pordnum, String pgmtseq, Integer pclrseqg, Integer pfabseq, String pcutlcn, String prdyejob) {
        Map<String, Object> params = new HashMap<>(9);

        params.put("pUsrid", pusrid);
        params.put("pPrgid", pprgid);
        params.put("pDyejob", pdyejob);
        params.put("pOrdnum", pordnum);
        params.put("pGmtseq", pgmtseq);
        params.put("pClrseqg", pclrseqg);
        params.put("pFabseq", pfabseq);
        params.put("pCutlcn", pcutlcn);
        params.put("pRdyejob", prdyejob);

        return procedureExecutor.executeNamedProcedure("procCU900pk0_InsNewDyejob", params, Void.class);
    }

    @Transactional(value = "pfsdbTransactionManager")
    @Override
    public ProcCu1000pk0QueryJobscutResponse executeProcCU1000PK0_QueryJobscut(String puserId, String pprogId, String pordnum, String pfabseq, String pdyejob) {
        Map<String, Object> params = new HashMap<>(7);

        params.put("pUserId", puserId);
        params.put("pProgId", pprogId);
        params.put("pOrdnum", pordnum);
        params.put("pFabseq", pfabseq);
        params.put("pDyejob", pdyejob);

        return procedureExecutor.executeNamedProcedure("procCU1000PK0_QueryJobscut", params, ProcCu1000pk0QueryJobscutResponse.class);
    }

    @Transactional(value = "pfsdbTransactionManager")
    @Override
    public ProcCu1000pk0LastJobRemarksDetailResponse executeProcCU1000PK0_LastJobRemarksDetail(String puserId, String pprogId, String pordnum, Integer pclrseqg, String pgmtseq) {
        Map<String, Object> params = new HashMap<>(6);

        params.put("pUserId", puserId);
        params.put("pProgId", pprogId);
        params.put("pORDNUM", pordnum);
        params.put("pCLRSEQG", pclrseqg);
        params.put("pGMTSEQ", pgmtseq);

        return procedureExecutor.executeNamedProcedure("procCU1000PK0_LastJobRemarksDetail", params, ProcCu1000pk0LastJobRemarksDetailResponse.class);
    }

    @Transactional(value = "pfsdbTransactionManager")
    @Override
    public ProcCu100pk0GetLastRemDetResponse executeProcCU100PK0_GetLastRemDet(String puserId, String pprogId, String pordnum, Integer pclrseqg, String pgmtseq) {
        Map<String, Object> params = new HashMap<>(6);

        params.put("pUserId", puserId);
        params.put("pProgId", pprogId);
        params.put("pORDNUM", pordnum);
        params.put("pCLRSEQG", pclrseqg);
        params.put("pGMTSEQ", pgmtseq);

        return procedureExecutor.executeNamedProcedure("procCU100PK0_GetLastRemDet", params, ProcCu100pk0GetLastRemDetResponse.class);
    }

    @Transactional(value = "pfsdbTransactionManager")
    @Override
    public ProcCu1000pk0GetCu900availMarkersResponse executeProcCU1000PK0_GetCU900AvailMarkers(String puserId, String pprogId, String pdyejob) {
        Map<String, Object> params = new HashMap<>(4);

        params.put("pUserId", puserId);
        params.put("pProgId", pprogId);
        params.put("pDYEJOB", pdyejob);

        return procedureExecutor.executeNamedProcedure("procCU1000PK0_GetCU900AvailMarkers", params, ProcCu1000pk0GetCu900availMarkersResponse.class);
    }

    @Transactional(value = "pfsdbTransactionManager")
    @Override
    public ProcCu210pk0QueryJobTransfersResponse executeProcCU210PK0_QueryJobTransfers(String puserId, String pprogId, String psordnum, String psdyejob, String pdordnum, String pddyejob) {
        Map<String, Object> params = new HashMap<>(7);

        params.put("pUserId", puserId);
        params.put("pProgId", pprogId);
        params.put("pSORDNUM", psordnum);
        params.put("pSDYEJOB", psdyejob);
        params.put("pDORDNUM", pdordnum);
        params.put("pDDYEJOB", pddyejob);

        return procedureExecutor.executeNamedProcedure("procCU210PK0_QueryJobTransfers", params, ProcCu210pk0QueryJobTransfersResponse.class);
    }

    @Transactional(value = "pfsdbTransactionManager")
    @Override
    public Void executeProcCU210PK0_UpdCqReamrks(String puserId, String pprogId, String psdyejob, String psfabseq, String pddyejob, String ptrftyp, String pcqremarks) {
        Map<String, Object> params = new HashMap<>(7);

        params.put("pUserId", puserId);
        params.put("pProgId", pprogId);
        params.put("pSDYEJOB", psdyejob);
        params.put("pSFABSEQ", psfabseq);
        params.put("pDDYEJOB", pddyejob);
        params.put("pTRFTYP", ptrftyp);
        params.put("pCQREMARKS", pcqremarks);

        return procedureExecutor.executeNamedProcedure("procCU210PK0_UpdCqReamrks", params, Void.class);
    }

    @Transactional(value = "pfsdbTransactionManager")
    @Override
    public ProcCu1000pk0LastJobRemarksResponse executeProcCU1000PK0_LastJobRemarks(String puserId, String pprogId, String pordnum, Integer pclrseq, String pgmtseq) {
        Map<String, Object> params = new HashMap<>(6);

        params.put("pUserId", puserId);
        params.put("pProgId", pprogId);
        params.put("pORDNUM", pordnum);
        params.put("pCLRSEQ", pclrseq);
        params.put("pGMTSEQ", pgmtseq);

        return procedureExecutor.executeNamedProcedure("procCU1000PK0_LastJobRemarks", params, ProcCu1000pk0LastJobRemarksResponse.class);
    }

    @Transactional(value = "pfsdbTransactionManager")
    @Override
    public ProcCu1000pk0SprocGetLastremarkCutstsResponse executeProcCU1000PK0_sproc_get_lastremark_cutsts() {
        Map<String, Object> params = new HashMap<>(1);


        return procedureExecutor.executeNamedProcedure("procCU1000PK0_sproc_get_lastremark_cutsts", params, ProcCu1000pk0SprocGetLastremarkCutstsResponse.class);
    }

    @Transactional(value = "pfsdbTransactionManager")
    @Override
    public Void executeProcCU900pk0_CreateAutoMarker(String pdyejob, String pgmtseq, Integer pclrseqg, Integer pfabseq, Integer pcutseq, String pordnum, String pmodelvariant, String pmodelFabtyp, String pfabcode, Integer pfromwid, Integer ptowid, String plcncod, String pusrid, String pstage, String pfabconstraint, String pnightSchedule) {
        Map<String, Object> params = new HashMap<>(16);

        params.put("p_dyejob", pdyejob);
        params.put("p_gmtseq", pgmtseq);
        params.put("p_clrseqg", pclrseqg);
        params.put("p_fabseq", pfabseq);
        params.put("p_cutseq", pcutseq);
        params.put("p_ordnum", pordnum);
        params.put("p_modelvariant", pmodelvariant);
        params.put("p_model_fabtyp", pmodelFabtyp);
        params.put("p_fabcode", pfabcode);
        params.put("p_fromwid", pfromwid);
        params.put("p_towid", ptowid);
        params.put("p_lcncod", plcncod);
        params.put("p_usrid", pusrid);
        params.put("p_stage", pstage);
        params.put("p_fabconstraint", pfabconstraint);
        params.put("p_night_schedule", pnightSchedule);

        return procedureExecutor.executeNamedProcedure("procCU900pk0_CreateAutoMarker", params, Void.class);
    }

    @Transactional(value = "pfsdbTransactionManager")
    @Override
    public ProcCu1000pk0GetCu900dyejobResponse executeProcCU1000PK0_GetCU900Dyejob(String puserId, String pprogId, String pordnum, String pdyejob, Date pfromdate, Date ptodate, String pfilterType) {
        Map<String, Object> params = new HashMap<>(8);

        params.put("pUserId", puserId);
        params.put("pProgId", pprogId);
        params.put("pORDNUM", pordnum);
        params.put("pDYEJOB", pdyejob);
        params.put("pFROMDATE", pfromdate);
        params.put("pTODATE", ptodate);
        params.put("pFilterType", pfilterType);

        return procedureExecutor.executeNamedProcedure("procCU1000PK0_GetCU900Dyejob", params, ProcCu1000pk0GetCu900dyejobResponse.class);
    }

    @Transactional(value = "pfsdbTransactionManager")
    @Override
    public ProcCu1000pk0QryCutBySizeOrderDetResponse executeProcCU1000PK0_QryCutBySize_OrderDet(String puserId, String pprogId, String pordnum, Integer pcolour, String pgarment) {
        Map<String, Object> params = new HashMap<>(7);

        params.put("pUserId", puserId);
        params.put("pProgId", pprogId);
        params.put("pOrdnum", pordnum);
        params.put("pColour", pcolour);
        params.put("pGarment", pgarment);

        return procedureExecutor.executeNamedProcedure("procCU1000PK0_QryCutBySize_OrderDet", params, ProcCu1000pk0QryCutBySizeOrderDetResponse.class);
    }

    @Transactional(value = "pfsdbTransactionManager")
    @Override
    public Void executeProcCU900pk0_InsSizes(String pdyejob, String pgmtseq, Integer pclrseqg, Integer pfabseq, Integer pcutseq, String pordnum) {
        Map<String, Object> params = new HashMap<>(6);

        params.put("p_dyejob", pdyejob);
        params.put("p_gmtseq", pgmtseq);
        params.put("p_clrseqg", pclrseqg);
        params.put("p_fabseq", pfabseq);
        params.put("p_cutseq", pcutseq);
        params.put("p_ordnum", pordnum);

        return procedureExecutor.executeNamedProcedure("procCU900pk0_InsSizes", params, Void.class);
    }

    @Transactional(value = "pfsdbTransactionManager")
    @Override
    public ProcCu1000pk0psprocCallMakeupmainPageResponse executeProcCu1000pk0psproc_call_makeupmain_page() {
        Map<String, Object> params = new HashMap<>(1);


        return procedureExecutor.executeNamedProcedure("procCu1000pk0psproc_call_makeupmain_page", params, ProcCu1000pk0psprocCallMakeupmainPageResponse.class);
    }

    @Transactional(value = "pfsdbTransactionManager")
    @Override
    public ProcCu1000pk0QryCuttingBySizeResponse executeProcCU1000PK0_QryCuttingBySize(String pprogId, String pordnum, Integer pcolour, String pgarment, String pfabcat) {
        Map<String, Object> params = new HashMap<>(7);

        params.put("pProgId", pprogId);
        params.put("pOrdnum", pordnum);
        params.put("pColour", pcolour);
        params.put("pGarment", pgarment);
        params.put("pFabcat", pfabcat);

        return procedureExecutor.executeNamedProcedure("procCU1000PK0_QryCuttingBySize", params, ProcCu1000pk0QryCuttingBySizeResponse.class);
    }

    @Transactional(value = "pfsdbTransactionManager")
    @Override
    public ProcCu1000pk0OrszSizesResponse executeProcCU1000PK0_OrszSizes(String puserId, String pprogId, String pordnum) {
        Map<String, Object> params = new HashMap<>(4);

        params.put("pUserId", puserId);
        params.put("pProgId", pprogId);
        params.put("pOrdnum", pordnum);

        return procedureExecutor.executeNamedProcedure("procCU1000PK0_OrszSizes", params, ProcCu1000pk0OrszSizesResponse.class);
    }

    @Transactional(value = "pfsdbTransactionManager")
    @Override
    public Void executeProcCU1000PK0_UpdRemarks(String puserId, String pprogId, String pordnum, Integer pclrseqg, String pgmtseq, String pcutrem, String pcutlcn, String pcutsts, String pmakrem, String puldrem, String pembrem, String pcutexc, String pmakexc, String puldexc, String pembexc) {
        Map<String, Object> params = new HashMap<>(15);

        params.put("pUserId", puserId);
        params.put("pProgId", pprogId);
        params.put("pORDNUM", pordnum);
        params.put("pCLRSEQG", pclrseqg);
        params.put("pGMTSEQ", pgmtseq);
        params.put("pCUTREM", pcutrem);
        params.put("pCUTLCN", pcutlcn);
        params.put("pCUTSTS", pcutsts);
        params.put("pMAKREM", pmakrem);
        params.put("pULDREM", puldrem);
        params.put("pEMBREM", pembrem);
        params.put("pCUTEXC", pcutexc);
        params.put("pMAKEXC", pmakexc);
        params.put("pULDEXC", puldexc);
        params.put("pEMBEXC", pembexc);

        return procedureExecutor.executeNamedProcedure("procCU1000PK0_UpdRemarks", params, Void.class);
    }

}